#include "util/general.h"

template <typename T>
void QuickSort(T* array, int* index, int left, int right, int flag)
{
	if(left < right)
	{
        int i = left, j = right;
        T array_privot = array[i];
        int index_private = index[i];
        // descending
        if(flag == 0)
        {
            while(i < j)
            {
                while(i<j && array[j]<=array_privot)
                    j--;
                if(i < j)
                {
                    array[i] = array[j];
                    index[i] = index[j];
                    i++;
                }
                while(i<j && array[i]>=array_privot)
                    i++;
                if(i < j)
                {
                    array[j] = array[i];
                    index[j] = index[i];
                    j--;
                }
            }
        }
        // ascending
        else if(flag = 1)
        {
            while(i < j)
            {
                while(i<j && array[j]>=array_privot)
                    j--;
                if(i < j)
                {
                    array[i] = array[j];
                    index[i] = index[j];
                    i++;
                }
                while(i<j && array[i]<=array_privot)
                    i++;
                if(i < j)
                {
                    array[j] = array[i];
                    index[j] = index[i];
                    j--;
                }
            }
        }
		array[i] = array_privot;
		index[i] = index_private;
		QuickSort(array, index, left, i-1, flag);
		QuickSort(array, index, i+1, right, flag);
	}
}

